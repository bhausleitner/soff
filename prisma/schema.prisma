// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum Status {
  ACTIVE
  INACTIVE
  ONBOARDING
}

enum Currency {
  USD
  EUR
}

enum Erp {
  ODOO
  NETSUITE
  SAP
}

enum EmailProvider {
  GMAIL
  OUTLOOK
}

enum QuoteStatus {
  WAITING
  RECEIVED
  CONFIRMED
  REJECTED
}

enum OrderStatus {
  PENDING
  CONFIRMED
  DELIVERED
  CANCELLED
}

enum RfqStatus {
  ACTIVE
  REQUESTED
  REVIEW
  CLOSED
  AWARDED
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model MsalTokenCache {
  id        Int      @id @default(autoincrement())
  clientId  String   @unique
  cache     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([createdAt])
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
  @@index([createdAt])
}

model Supplier {
  id               Int               @id @default(autoincrement())
  name             String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  contactPerson    String?
  function         String?
  email            String?
  phone            String?           @default("")
  status           Status            @default(ACTIVE)
  responseTime     Int?              @default(48)
  quotes           Quote[]
  chatParticipants ChatParticipant[]
  organizationId   Int?
  organization     Organization?     @relation(fields: [organizationId], references: [id])
  requestForQuotes RequestForQuote[]
  utcOffset        Float             @default(0)
  erpId            Int?
  street           String?
  street2          String?
  city             String?
  zip              String?
  country          String?
  supplierParentId Int?
  supplierParent   Supplier?         @relation("SupplierToContact", fields: [supplierParentId], references: [id])
  childrenSupplier Supplier[]        @relation("SupplierToContact")

  @@index([name])
  @@index([organizationId])
  @@index([email])
  @@index([status])
  @@index([createdAt])
}

model ErpProduct {
  id             Int           @id @default(autoincrement())
  productId      Int
  productName    String
  productCode    String?
  organizationId Int?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  updatedAt      DateTime      @updatedAt

  @@index([productId])
  @@index([productName])
  @@index([productCode])
  @@index([organizationId])
}

model Quote {
  id                 Int         @id @default(autoincrement())
  supplierId         Int
  paymentTerms       String?
  price              Float
  status             QuoteStatus
  createdAt          DateTime    @default(now())
  updatedAt          DateTime    @updatedAt
  orders             Order[]
  supplier           Supplier    @relation(fields: [supplierId], references: [id])
  lineItems          LineItem[]
  erpPurchaseOrderId Int?
  chatId             Int?
  chat               Chat?       @relation(fields: [chatId], references: [id])
  version            Int         @default(1)
  isActive           Boolean     @default(true)
  fileKey            String?
  currency           Currency    @default(USD)

  @@index([status])
  @@index([supplierId])
  @@index([createdAt])
  @@index([isActive])
}

model RequestForQuote {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  suppliers      Supplier[]
  chats          Chat[]
  organizationId Int
  organization   Organization  @relation(fields: [organizationId], references: [id])
  status         RfqStatus     @default(REQUESTED)
  lineItems      RfqLineItem[]
  subject        String?

  @@index([organizationId])
  @@index([createdAt])
}

model QuoteComparison {
  id        Int      @id @default(autoincrement())
  quoteIds  Int[]
  data      Json
  createdAt DateTime @default(now())

  @@index([createdAt])
}

model RfqLineItem {
  id                Int             @id @default(autoincrement())
  quantity          Int?
  description       String?
  fileNames         String[]
  requestForQuoteId Int
  requestForQuote   RequestForQuote @relation(fields: [requestForQuoteId], references: [id])
  lineItems         LineItem[]

  @@index([requestForQuoteId])
}

model LineItem {
  id            Int     @id @default(autoincrement())
  partIdString  String?
  description   String?
  quantity      Int?
  price         Float?
  leadTime      String?
  quoteId       Int
  rfqLineItemId Int?

  quote        Quote         @relation(fields: [quoteId], references: [id])
  rfqLineItem  RfqLineItem?  @relation(fields: [rfqLineItemId], references: [id])
  pricingTiers PricingTier[]

  @@index([quoteId])
  @@index([rfqLineItemId])
}

model PricingTier {
  id          Int      @id @default(autoincrement())
  minQuantity Int
  maxQuantity Int?
  price       Float
  lineItemId  Int
  lineItem    LineItem @relation(fields: [lineItemId], references: [id])

  @@index([lineItemId])
}

model Order {
  id              Int         @id @default(autoincrement())
  quoteId         Int
  orderDate       DateTime
  deliveryDate    DateTime
  deliveryAddress String
  status          OrderStatus
  quote           Quote       @relation(fields: [quoteId], references: [id])

  @@index([status])
  @@index([quoteId])
  @@index([orderDate])
  @@index([deliveryDate])
}

model Organization {
  id               Int               @id @default(autoincrement())
  name             String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  emailProvider    EmailProvider?
  erpUrl           String?
  erpQuoteUrl      String?
  erpContactUrl    String?
  erp              Erp?
  suppliers        Supplier[]
  users            User[]
  requestForQuotes RequestForQuote[]
  erpProducts      ErpProduct[]

  @@index([name])
  @@index([emailProvider])
  @@index([erp])
}

model User {
  id               Int               @id @default(autoincrement())
  email            String
  clerkUserId      String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  chatParticipants ChatParticipant[]
  organizationId   Int?
  organization     Organization?     @relation(fields: [organizationId], references: [id])

  @@index([email])
  @@index([organizationId])
  @@index([clerkUserId])
}

model Chat {
  id                Int               @id @default(autoincrement())
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  messages          Message[]
  chatParticipants  ChatParticipant[]
  quotes            Quote[]
  requestForQuote   RequestForQuote?  @relation(fields: [requestForQuoteId], references: [id])
  requestForQuoteId Int?
  subject           String?

  @@index([requestForQuoteId])
  @@index([createdAt])
}

model Message {
  id                Int             @id @default(autoincrement())
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  content           String
  chat              Chat            @relation(fields: [chatId], references: [id])
  chatId            Int
  chatParticipant   ChatParticipant @relation(fields: [chatParticipantId], references: [id])
  chatParticipantId Int
  outlookMessageId  String?
  gmailMessageId    String?
  conversationId    String
  fileNames         String[]
  ccRecipients      CcRecipient[]

  @@index([chatId])
  @@index([chatParticipantId])
  @@index([createdAt])
  @@index([conversationId])
}

model ChatParticipant {
  id         Int       @id @default(autoincrement())
  chat       Chat      @relation(fields: [chatId], references: [id])
  chatId     Int
  supplier   Supplier? @relation(fields: [supplierId], references: [id])
  supplierId Int?
  user       User?     @relation(fields: [userId], references: [id])
  userId     Int?
  messages   Message[]

  @@index([chatId])
  @@index([supplierId])
  @@index([userId])
}

model CcRecipient {
  id        Int     @id @default(autoincrement())
  email     String
  message   Message @relation(fields: [messageId], references: [id])
  messageId Int

  @@index([messageId])
}
