// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

enum Status {
    ACTIVE
    INACTIVE
    ONBOARDING
}

enum QuoteStatus {
    WAITING
    RECEIVED
    CONFIRMED
    REJECTED
}

enum OrderStatus {
    PENDING
    CONFIRMED
    DELIVERED
    CANCELLED
}

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Supplier {
    id            Int      @id @default(autoincrement())
    name          String   
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    contactPerson String
    email         String
    status        Status   @default(ACTIVE)
    responseTime  Int?     @default(48)
    parts         SupplierPart[]
    quotes        Quote[]

    @@index([name])
}

model Part {
  id         Int            @id @default(autoincrement())
  partNumber String?
  partName   String
  price      Float?
  cadFile    String?
  suppliers  SupplierPart[]
  quotes     QuotePart[]

  @@index([partName])
}

model SupplierPart {
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId Int
  part       Part @relation(fields: [partId], references: [id])
  partId     Int

  @@id([supplierId, partId])
}

model Quote {
  id         Int      @id @default(autoincrement())
  supplierId Int
  quantity   Int
  price      Float
  status     QuoteStatus
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  orders     Order[]
  parts      QuotePart[]

  supplier   Supplier @relation(fields: [supplierId], references: [id])

  @@index([status])
}

model QuotePart {
  quote     Quote @relation(fields: [quoteId], references: [id])
  quoteId   Int
  part      Part @relation(fields: [partId], references: [id])
  partId    Int

  @@id([quoteId, partId])
}

model Order {
  id              Int      @id @default(autoincrement())
  quoteId         Int
  orderDate       DateTime
  deliveryDate    DateTime
  deliveryAddress String
  status          OrderStatus

  quote           Quote    @relation(fields: [quoteId], references: [id])

  @@index([status])
}
